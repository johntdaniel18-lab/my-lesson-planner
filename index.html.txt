<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive IELTS Lesson Plan: Writing Task 1</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Warm Neutrals -->
    <!-- Application Structure Plan: The SPA transforms the static lesson plan table into an interactive dashboard. The top section provides a quick overview (topic, level, objectives). The main body is a two-column grid: on one side, a Chart.js donut chart visualizes the time allocation per lesson stage, offering an immediate sense of pacing. The other, larger column features the lesson stages as a series of interactive, collapsible accordion cards. This structure allows the teacher to see the big picture at a glance and then drill down into specific stage details (activities, materials, notes) as needed, which is more user-friendly and efficient than scrolling a long table. -->
    <!-- Visualization & Content Choices: Report Info (Lesson Plan Table) -> Goal (Understand lesson structure & pacing) -> Viz/Presentation (Interactive accordion for stages, Donut chart for time allocation) -> Interaction (Click to expand/collapse stage details) -> Justification (Accordions provide a clean, focused view, preventing information overload. The chart gives a quick, quantitative overview of the lesson's flow.) -> Library/Method (HTML/Tailwind for accordions, Chart.js for the donut chart). NO SVG/Mermaid used. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
            height: 300px;
            max-height: 400px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 350px;
            }
        }
        .accordion-content {
            transition: max-height 0.5s ease-in-out, padding 0.5s ease-in-out;
            overflow: hidden;
            max-height: 0;
        }
        .accordion-content.open {
            max-height: 1000px;
        }
        .rotate-180 {
            transform: rotate(180deg);
        }
        .transition-transform {
            transition: transform 0.3s;
        }
    </style>
</head>
<body class="bg-amber-50 text-gray-800">

    <div class="container mx-auto p-4 sm:p-6 lg:p-8">

        <header class="text-center mb-8 md:mb-12">
            <h1 class="text-3xl md:text-4xl font-bold text-amber-900">IELTS Foundation Lesson Plan</h1>
            <p class="text-lg md:text-xl text-amber-700 mt-2">Writing Task 1: Describing a Process</p>
        </header>

        <section id="overview" class="bg-white rounded-2xl shadow-lg p-6 mb-8 md:mb-12 border border-amber-200">
            <h2 class="text-2xl font-bold text-amber-800 mb-4 border-b-2 border-amber-200 pb-2">Lesson Overview</h2>
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 text-center">
                <div class="bg-amber-100 p-4 rounded-lg">
                    <h3 class="font-semibold text-amber-900">Class Level</h3>
                    <p>A2 (Targeting IELTS 3.0)</p>
                </div>
                <div class="bg-amber-100 p-4 rounded-lg">
                    <h3 class="font-semibold text-amber-900">Target Students</h3>
                    <p>Vietnamese Learners</p>
                </div>
                <div class="bg-amber-100 p-4 rounded-lg">
                    <h3 class="font-semibold text-amber-900">Duration</h3>
                    <p>90 Minutes</p>
                </div>
            </div>
            <div class="mt-6">
                <h3 class="text-xl font-bold text-amber-800 mb-3">Main Objectives</h3>
                <p class="mb-4 text-gray-700">By the end of this lesson, students will have a foundational ability to approach an IELTS Writing Task 1 process diagram. They will be able to recognize key features, use basic grammatical structures, and sequence their descriptions logically.</p>
                <ul id="objectives-list" class="space-y-2">
                </ul>
            </div>
        </section>

        <main class="grid grid-cols-1 lg:grid-cols-3 gap-8 md:gap-12">
            
            <aside class="lg:col-span-1 bg-white p-6 rounded-2xl shadow-lg border border-amber-200 h-fit lg:sticky top-8">
                 <h2 class="text-2xl font-bold text-amber-800 mb-4 text-center">Lesson Pacing</h2>
                 <p class="text-center text-gray-600 mb-4">This chart shows the time allocated to each stage of the lesson, helping you manage the 90-minute session effectively.</p>
                <div class="chart-container">
                    <canvas id="timeAllocationChart"></canvas>
                </div>
            </aside>

            <div id="lesson-plan" class="lg:col-span-2 space-y-4">
                <h2 class="text-2xl font-bold text-amber-800 mb-4">Interactive Lesson Stages</h2>
                <p class="text-gray-700 mb-6">This section breaks down the entire 90-minute lesson into manageable stages. Click on any stage to see detailed activities, required materials, and specific notes for teaching Vietnamese students. This interactive format allows you to focus on one part of the lesson at a time.</p>
            </div>

        </main>
    </div>

    <script>
        const lessonData = {
            objectives: [
                "Identify and use basic vocabulary for materials and shapes.",
                "Understand the structure of the Present Simple Passive.",
                "Use basic sequencing words (`First`, `Then`, `Next`, `Finally`).",
                "Write simple sentences to describe the steps in a process."
            ],
            stages: [
                {
                    time: 10,
                    title: "Warm-up & Introduction",
                    icon: "üëã",
                    activity: "Greeting & Lead-in Discussion. Greet the class and ask students about food they eat at celebrations (Exercise 01, Page 2).",
                    materials: "Whiteboard, Markers",
                    interaction: "Teacher-Student, Student-Student",
                    notes: {
                        intro: 'Use simple English: "Hello everyone! How are you?" Ask: "What food do you eat for T·∫øt? Do you like b√°nh ch∆∞ng?" Introduce the lesson goal: "Today, we learn to describe how to make food for IELTS Writing."',
                        vietnamese: "M·ª•c ti√™u: Gi√∫p h·ªçc sinh l√†m quen v√† gi·ªõi thi·ªáu ch·ªß ƒë·ªÅ m·ªôt c√°ch g·∫ßn g≈©i."
                    }
                },
                {
                    time: 15,
                    title: "Vocabulary Building",
                    icon: "üìñ",
                    activity: "Introducing Key Words (Exercise 02 & 03, Page 2). Show pictures of equipment, drill pronunciation of new words, and have students complete the vocabulary chart in pairs.",
                    materials: "Student's Book (Page 2)",
                    interaction: "Teacher-Student, Student-Student",
                    notes: {
                        intro: 'Focus on pronunciation: `grinder`, `plastic`, `metal`, `round`, `handles`.',
                        vietnamese: "T·ª´ v·ª±ng ch√≠nh: Materials (Ch·∫•t li·ªáu): `plastic`, `wood`, `metal`. Parts (B·ªô ph·∫≠n): `handles`. Shapes (H√¨nh d·∫°ng): `round`, `square`."
                    }
                },
                {
                    time: 15,
                    title: "Understanding the Process",
                    icon: "üîç",
                    activity: "Matching Pictures to Steps (Exercise 04, Page 3). Direct students to the 6 pictures and ask simple questions. Students work in pairs to match pictures (1-6) with instructions (a-f).",
                    materials: "Student's Book (Page 3)",
                    interaction: "Teacher-Student, Student-Student",
                    notes: {
                        intro: 'For each picture, ask: "What can you see?" to check comprehension. Go over the answers as a class to ensure everyone understands the sequence before learning the grammar.',
                        vietnamese: "M·ª•c ti√™u: ƒê·∫£m b·∫£o h·ªçc sinh hi·ªÉu c√°c b∆∞·ªõc c·ªßa quy tr√¨nh tr∆∞·ªõc khi h·ªçc ng·ªØ ph√°p."
                    }
                },
                {
                    time: 20,
                    title: "Grammar Point 1: Present Simple Passive",
                    icon: "‚úçÔ∏è",
                    activity: "Presentation & Controlled Practice. Explain the grammar using the board. Go through the Grammar Box on Page 3. Students complete Exercise 05 (Page 4) about tea.",
                    materials: "Book (Pages 3-4), Whiteboard",
                    interaction: "Teacher-Student, Student",
                    notes: {
                        intro: 'Presentation: Write "You mix flour with water" (Active). Then write "Flour is mixed with water" (Passive). Explain that the action is more important. Do the first sentence of Ex. 05 together as an example.',
                        vietnamese: "C√¥ng th·ª©c B·ªã ƒë·ªông: S + is/are + V3/ed."
                    }
                },
                {
                    time: 15,
                    title: "Grammar Point 2: Sequencing Words",
                    icon: "‚û°Ô∏è",
                    activity: "Presentation & Controlled Practice. Introduce the sequencing words from the box. Explain their meaning and position. Students complete Exercise 06 (Page 4).",
                    materials: "Book (Page 4), Whiteboard",
                    interaction: "Teacher-Student, Student",
                    notes: {
                        intro: 'Emphasize the comma after the word (e.g., "First, ..."). This exercise is quick and builds confidence.',
                        vietnamese: "Write the words on the board with their Vietnamese meaning: `First` (ƒê·∫ßu ti√™n), `Then` / `Next` (Sau ƒë√≥), `After that` (Sau ƒë√≥ n·ªØa), `Finally` (Cu·ªëi c√πng)."
                    }
                },
                {
                    time: 10,
                    title: "Production: Guided Practice",
                    icon: "üñãÔ∏è",
                    activity: "Sentence Building. Ask students to combine the grammar and sequencing words. Have them write 2-3 sentences about the string hopper process on their own. Teacher walks around and helps.",
                    materials: "Notebooks, Pens",
                    interaction: "Student, Teacher-Student",
                    notes: {
                        intro: 'Model the first sentence on the board: "**First,** the rice **is ground** into flour." Encourage them to use their books for help. Praise all efforts.',
                        vietnamese: "M·ª•c ti√™u: H·ªçc sinh b·∫Øt ƒë·∫ßu t·ª± vi·∫øt c√¢u ho√†n ch·ªânh, √°p d·ª•ng ki·∫øn th·ª©c v·ª´a h·ªçc."
                    }
                },
                {
                    time: 5,
                    title: "Wrap-up & Homework",
                    icon: "üè†",
                    activity: "Review and Assign Homework. Briefly review the main points: Passive voice and sequencers. Assign homework.",
                    materials: "Whiteboard",
                    interaction: "Teacher-Student",
                    notes: {
                        intro: 'Ask: "What did we learn today?" Elicit "Passive" and "First, Then...".',
                        vietnamese: 'Homework: "Write 3 sentences about how to make instant noodles (c√°ch n·∫•u m√¨ g√≥i). Use the Present Simple Passive and sequencing words." This is a familiar topic for them.'
                    }
                }
            ]
        };

        const apiKey = ""; 

        async function callGeminiApi(prompt, systemInstruction) {
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-09-2025:generateContent?key=${apiKey}`;
            
            const payload = {
                contents: [{ parts: [{ text: prompt }] }],
            };

            if (systemInstruction) {
                payload.systemInstruction = {
                    parts: [{ text: systemInstruction }]
                };
            }

            let response;
            try {
                response = await fetchWithRetry(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });

                if (!response.ok) {
                    const errorBody = await response.json();
                    throw new Error(`API Error ${response.status}: ${errorBody.error.message || 'Unknown error'}`);
                }

                const result = await response.json();
                const candidate = result.candidates?.[0];

                if (candidate && candidate.content?.parts?.[0]?.text) {
                    return candidate.content.parts[0].text;
                } else if (candidate && candidate.finishReason) {
                     throw new Error(`Generation stopped: ${candidate.finishReason}`);
                } else {
                    throw new Error("Invalid response structure from API.");
                }
            } catch (error) {
                console.error("Gemini API call failed:", error);
                return `Error: ${error.message}`;
            }
        }

        async function fetchWithRetry(url, options, retries = 3, delay = 1000) {
            for (let i = 0; i < retries; i++) {
                try {
                    const response = await fetch(url, options);
                    if (response.status === 429 || response.status >= 500) {
                        if (i === retries - 1) return response; 
                        await new Promise(res => setTimeout(res, delay * Math.pow(2, i)));
                        continue;
                    }
                    return response; 
                } catch (error) {
                    if (i === retries - 1) throw error; 
                    await new Promise(res => setTimeout(res, delay * Math.pow(2, i)));
                }
            }
        }

        function showGeminiResult(button, text) {
            const resultDiv = button.nextElementSibling;
            resultDiv.style.display = 'block';
            resultDiv.innerHTML = text.replace(/\n/g, '<br>');
            button.disabled = false;
            button.textContent = button.dataset.originalText;
        }

        function setButtonLoading(button, text = "Generating...") {
            if (!button.dataset.originalText) {
                button.dataset.originalText = button.textContent;
            }
            button.disabled = true;
            button.textContent = text;
        }

        async function generateAlternativeActivity(button, stageTitle, stageActivity) {
            setButtonLoading(button, "‚ú® Generating Activity...");
            const systemPrompt = "You are an expert IELTS teacher creating lesson plans for A2-level Vietnamese students. Provide one creative, simple, and effective alternative activity. Be concise (2-3 sentences).";
            const userPrompt = `The current lesson stage is "${stageTitle}". The activity is: "${stageActivity}". Suggest one alternative activity suitable for A2 Vietnamese learners.`;
            
            const result = await callGeminiApi(userPrompt, systemPrompt);
            showGeminiResult(button, result);
        }

        async function generateHomework(button) {
            setButtonLoading(button, "‚ú® Generating Homework...");
            const systemPrompt = "You are an expert IELTS teacher for A2-level Vietnamese students. Generate one simple, creative homework assignment for Writing Task 1 (Process Diagrams). The task should take about 15 minutes.";
            const userPrompt = "Generate a new homework idea for A2 students. It should be about describing a simple process, similar to the 'string hoppers' example. Give a clear 1-2 sentence instruction for the student.";
            
            const result = await callGeminiApi(userPrompt, systemPrompt);
            showGeminiResult(button, result);
        }

        document.addEventListener('DOMContentLoaded', () => {
            const objectivesList = document.getElementById('objectives-list');
            lessonData.objectives.forEach(obj => {
                const li = document.createElement('li');
                li.className = "flex items-start";
                li.innerHTML = `<span class="text-amber-600 mr-2 mt-1">‚úì</span> <span>${obj}</span>`;
                objectivesList.appendChild(li);
            });

            const lessonPlanContainer = document.getElementById('lesson-plan');
            lessonData.stages.forEach((stage, index) => {
                const stageDiv = document.createElement('div');
                stageDiv.className = 'bg-white rounded-xl shadow-md border border-amber-200 overflow-hidden';

                let geminiFeaturesHtml = `
                    <div class="mt-4 pt-4 border-t border-gray-200">
                        <h4 class="font-bold mb-2 text-amber-800">‚ú® AI Teacher's Assistant</h4>
                        <button class="gemini-button bg-amber-600 hover:bg-amber-700 text-white font-semibold py-2 px-4 rounded-lg text-sm" 
                                onclick="generateAlternativeActivity(this, '${stage.title}', '${stage.activity.replace(/'/g, "\\'")}')">
                            Suggest Alternative Activity
                        </button>
                        <div class="gemini-result bg-amber-50 p-3 rounded-lg mt-3" style="display: none;"></div>
                    </div>
                `;

                if (stage.title === "Wrap-up & Homework") {
                    geminiFeaturesHtml += `
                        <div class="mt-4">
                            <button class="gemini-button bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg text-sm" 
                                    onclick="generateHomework(this)">
                                ‚ú® Generate New Homework Idea
                            </button>
                            <div class="gemini-result bg-blue-50 p-3 rounded-lg mt-3" style="display: none;"></div>
                        </div>
                    `;
                }
                
                stageDiv.innerHTML = `
                    <button class="accordion-toggle w-full flex justify-between items-center p-5 text-left font-semibold text-amber-900 bg-amber-100 hover:bg-amber-200 focus:outline-none">
                        <div class="flex items-center">
                            <span class="text-xl mr-4">${stage.icon}</span>
                            <span>${index + 1}. ${stage.title} (${stage.time} mins)</span>
                        </div>
                        <span class="accordion-arrow text-2xl transition-transform">‚ñº</span>
                    </button>
                    <div class="accordion-content">
                        <div class="p-5 border-t border-amber-200">
                            <h4 class="font-bold mb-2">Activity:</h4>
                            <p class="mb-4">${stage.activity}</p>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                                <div><h4 class="font-bold mb-1">Materials:</h4><p>${stage.materials}</p></div>
                                <div><h4 class="font-bold mb-1">Interaction:</h4><p>${stage.interaction}</p></div>
                            </div>
                            <div class="bg-gray-100 p-4 rounded-lg">
                                <h4 class="font-bold mb-2 text-gray-700">Teacher's Notes:</h4>
                                <p class="mb-3">${stage.notes.intro}</p>
                                <p class="text-sm text-blue-800 bg-blue-100 p-2 rounded"><strong>Vietnamese Support:</strong> ${stage.notes.vietnamese}</p>
                            </div>
                            
                            ${geminiFeaturesHtml}

                        </div>
                    </div>
                `;
                lessonPlanContainer.appendChild(stageDiv);
            });

            const toggles = document.querySelectorAll('.accordion-toggle');
            toggles.forEach(toggle => {
                toggle.addEventListener('click', () => {
                    const content = toggle.nextElementSibling;
                    const arrow = toggle.querySelector('.accordion-arrow');
                    
                    if (content.classList.contains('open')) {
                        content.classList.remove('open');
                        arrow.classList.remove('rotate-180');
                    } else {
                        document.querySelectorAll('.accordion-content.open').forEach(openContent => {
                            openContent.classList.remove('open');
                            openContent.previousElementSibling.querySelector('.accordion-arrow').classList.remove('rotate-180');
                        });
                        content.classList.add('open');
                        arrow.classList.add('rotate-180');
                    }
                });
            });

            const ctx = document.getElementById('timeAllocationChart').getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: lessonData.stages.map(s => s.title),
                    datasets: [{
                        label: 'Time Allocation (minutes)',
                        data: lessonData.stages.map(s => s.time),
                        backgroundColor: [
                            '#fde68a', '#fcd34d', '#fbbf24', '#f59e0b', '#d97706', '#b45309', '#78350f'
                        ],
                        borderColor: '#fff',
                        borderWidth: 3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                font: { size: 12 },
                                boxWidth: 20,
                                padding: 15
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.parsed !== null) {
                                        label += context.parsed + ' mins';
                                    }
                                    return label;
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>

</body>
</html>

